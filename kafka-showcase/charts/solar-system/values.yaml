mqtt-bridge:
  image:
    repository: harbor.puzzle.ch/pitc-cicd-private/kafka-poc
    tag: mqtt-bridge-latest
    pullPolicy: IfNotPresent
  env:
    MQTT_BROKER: "tcp://solar-system-mosquitto.solar-system.svc.cluster.local:1883"
    MQTT_TOPIC: "solar/data"
    KAFKA_BROKER: "mykafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_TOPIC: "topic-solar-data"
    KAFKA_BALANCER: "hash"

kafka-web-consumer:
  image:
    repository: harbor.puzzle.ch/pitc-cicd-private/kafka-poc
    tag: solar-consumer-latest
  #  tag: solar-kafka-web-consumer-latest
    pullPolicy: Always

  env:
    KAFKA_BROKER: "mykafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_TOPIC: "topic-solar-data"
    KAFKA_CONSUMER_GROUP: "gui-consumer"
    KAFKA_START_OFFSET: "first"

mqtt-producer:
  replicaCount: 1
  image:
    repository: harbor.puzzle.ch/pitc-cicd-private/kafka-pocsolar-mqtt-producer
    tag: latest
    pullPolicy: IfNotPresent
  env:
    MQTT_BROKER: "tcp://solar-system-mosquitto.solar-system.svc.cluster.local:1883"
    MQTT_TOPIC: "solar/data"
    FETCH_INTERVAL: 3
ingress:
  hostname: ""